security:
    encoders:
        # use partner as
        App\Entity\Partner:
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        partner_api_account:
            entity:
                # the class of the entity that represents users
                class: 'App\Entity\Partner'
                # the property to query by - e.g. username, email, etc
                property: 'email'
    firewalls:
        login: # e.g. ^/api/v1/login/check
            pattern: '^/api/v\d+/login/check$'
            stateless: true
            anonymous: true
            json_login: # e.g. ^/api/v1/login/check
                check_path: '/%api_and_version_path_prefix%/login/check'
                username_path: api_account.email
                password_path:  api_account.password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh_token:  # e.g. ^/api/v1/token/refresh
            pattern:  '^/api/v\d+/token/refresh$'
            stateless: true
            anonymous: true
        api_admin_doc: # ^/api/v1/administrator/doc or ^/api/v1/specification/administrator/
            pattern: '^/api/v\d+/(administrator/doc)|(specification/administrator)'
            anonymous: true
        ## IMPORTANT: a redirection is made from "/api/v1/doc" or "/api/v1/default/doc" to "/api/v1/consumer/doc"!
        api_partner_doc: # ^/api/v1/consumer/doc or ^/api/v1/specification/consumer/
            pattern: '^/api/v\d+/(default|consumer/doc)|(specification/default|consumer)'
            anonymous: true
        api: # ^/api/v1
            pattern: '^/api/v\d+'
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/api/v\d+/(default|consumer/doc)|(specification/default|consumer)', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/api/v\d+/(administrator/doc)|(specification/administrator)', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/api/v\d+/login/check$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/api/v\d+/token/refresh$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/api/v\d+', roles: IS_AUTHENTICATED_FULLY }